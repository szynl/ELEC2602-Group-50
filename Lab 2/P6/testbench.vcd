$date
	Thu Mar 27 14:32:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module part6_TB $end
$var wire 7 ! output_7seg4 [6:0] $end
$var wire 7 " output_7seg3 [6:0] $end
$var wire 7 # output_7seg2 [6:0] $end
$var wire 7 $ output_7seg1 [6:0] $end
$var reg 2 % S [1:0] $end
$var reg 2 & U [1:0] $end
$var reg 2 ' V [1:0] $end
$var reg 2 ( W [1:0] $end
$var reg 2 ) X [1:0] $end
$var reg 4 * count [3:0] $end
$scope module instantiate_p6 $end
$var wire 2 + s [1:0] $end
$var wire 2 , u [1:0] $end
$var wire 2 - v [1:0] $end
$var wire 2 . w [1:0] $end
$var wire 2 / x [1:0] $end
$var wire 7 0 code4 [6:0] $end
$var wire 7 1 code3 [6:0] $end
$var wire 7 2 code2 [6:0] $end
$var wire 7 3 code1 [6:0] $end
$scope module inst1 $end
$var wire 2 4 s [1:0] $end
$var wire 2 5 u [1:0] $end
$var wire 2 6 v [1:0] $end
$var wire 2 7 w [1:0] $end
$var wire 2 8 x [1:0] $end
$var wire 2 9 temp [1:0] $end
$var wire 7 : chosen_7segCode [6:0] $end
$scope module part3 $end
$var wire 2 ; s [1:0] $end
$var wire 2 < u [1:0] $end
$var wire 2 = v [1:0] $end
$var wire 2 > w [1:0] $end
$var wire 2 ? x [1:0] $end
$var reg 2 @ m [1:0] $end
$var reg 2 A t1 [1:0] $end
$var reg 2 B t2 [1:0] $end
$upscope $end
$scope module part4 $end
$var wire 2 C code [1:0] $end
$var reg 7 D decoded_output [6:0] $end
$upscope $end
$upscope $end
$scope module inst2 $end
$var wire 2 E s [1:0] $end
$var wire 2 F u [1:0] $end
$var wire 2 G v [1:0] $end
$var wire 2 H w [1:0] $end
$var wire 2 I x [1:0] $end
$var wire 2 J temp [1:0] $end
$var wire 7 K chosen_7segCode [6:0] $end
$scope module part3 $end
$var wire 2 L s [1:0] $end
$var wire 2 M u [1:0] $end
$var wire 2 N v [1:0] $end
$var wire 2 O w [1:0] $end
$var wire 2 P x [1:0] $end
$var reg 2 Q m [1:0] $end
$var reg 2 R t1 [1:0] $end
$var reg 2 S t2 [1:0] $end
$upscope $end
$scope module part4 $end
$var wire 2 T code [1:0] $end
$var reg 7 U decoded_output [6:0] $end
$upscope $end
$upscope $end
$scope module inst3 $end
$var wire 2 V s [1:0] $end
$var wire 2 W u [1:0] $end
$var wire 2 X v [1:0] $end
$var wire 2 Y w [1:0] $end
$var wire 2 Z x [1:0] $end
$var wire 2 [ temp [1:0] $end
$var wire 7 \ chosen_7segCode [6:0] $end
$scope module part3 $end
$var wire 2 ] s [1:0] $end
$var wire 2 ^ u [1:0] $end
$var wire 2 _ v [1:0] $end
$var wire 2 ` w [1:0] $end
$var wire 2 a x [1:0] $end
$var reg 2 b m [1:0] $end
$var reg 2 c t1 [1:0] $end
$var reg 2 d t2 [1:0] $end
$upscope $end
$scope module part4 $end
$var wire 2 e code [1:0] $end
$var reg 7 f decoded_output [6:0] $end
$upscope $end
$upscope $end
$scope module inst4 $end
$var wire 2 g s [1:0] $end
$var wire 2 h u [1:0] $end
$var wire 2 i v [1:0] $end
$var wire 2 j w [1:0] $end
$var wire 2 k x [1:0] $end
$var wire 2 l temp [1:0] $end
$var wire 7 m chosen_7segCode [6:0] $end
$scope module part3 $end
$var wire 2 n s [1:0] $end
$var wire 2 o u [1:0] $end
$var wire 2 p v [1:0] $end
$var wire 2 q w [1:0] $end
$var wire 2 r x [1:0] $end
$var reg 2 s m [1:0] $end
$var reg 2 t t1 [1:0] $end
$var reg 2 u t2 [1:0] $end
$upscope $end
$scope module part4 $end
$var wire 2 v code [1:0] $end
$var reg 7 w decoded_output [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1100011 w
b11 v
b1 u
b11 t
b11 s
b10 r
b1 q
b0 p
b11 o
b0 n
b1100011 m
b11 l
b10 k
b1 j
b0 i
b11 h
b0 g
b11100 f
b10 e
b0 d
b10 c
b10 b
b1 a
b0 `
b11 _
b10 ^
b0 ]
b11100 \
b10 [
b1 Z
b0 Y
b11 X
b10 W
b0 V
b1110000 U
b1 T
b11 S
b1 R
b1 Q
b0 P
b11 O
b10 N
b1 M
b0 L
b1110000 K
b1 J
b0 I
b11 H
b10 G
b1 F
b0 E
b111 D
b0 C
b10 B
b0 A
b0 @
b11 ?
b10 >
b1 =
b0 <
b0 ;
b111 :
b0 9
b11 8
b10 7
b1 6
b0 5
b0 4
b111 3
b1110000 2
b11100 1
b1100011 0
b11 /
b10 .
b1 -
b0 ,
b0 +
b0 *
b11 )
b10 (
b1 '
b0 &
b0 %
b111 $
b1110000 #
b11100 "
b1100011 !
$end
#50000
b1110000 $
b1110000 3
b1110000 :
b1110000 D
b11100 #
b11100 2
b11100 K
b11100 U
b1100011 "
b1100011 1
b1100011 \
b1100011 f
b111 !
b111 0
b111 m
b111 w
b1 9
b1 @
b1 C
b10 J
b10 Q
b10 T
b11 [
b11 b
b11 e
b0 l
b0 s
b0 v
b11 B
b1 A
b0 S
b10 R
b1 d
b11 c
b10 u
b0 t
b1 %
b1 +
b1 4
b1 ;
b1 E
b1 L
b1 V
b1 ]
b1 g
b1 n
b1 *
#100000
b11100 $
b11100 3
b11100 :
b11100 D
b1100011 #
b1100011 2
b1100011 K
b1100011 U
b111 "
b111 1
b111 \
b111 f
b1110000 !
b1110000 0
b1110000 m
b1110000 w
b10 B
b0 A
b10 9
b10 @
b10 C
b11 S
b1 R
b11 J
b11 Q
b11 T
b0 d
b10 c
b0 [
b0 b
b0 e
b1 u
b11 t
b1 l
b1 s
b1 v
b10 %
b10 +
b10 4
b10 ;
b10 E
b10 L
b10 V
b10 ]
b10 g
b10 n
b10 *
#150000
b1100011 $
b1100011 3
b1100011 :
b1100011 D
b111 #
b111 2
b111 K
b111 U
b1110000 "
b1110000 1
b1110000 \
b1110000 f
b11100 !
b11100 0
b11100 m
b11100 w
b11 9
b11 @
b11 C
b0 J
b0 Q
b0 T
b1 [
b1 b
b1 e
b10 l
b10 s
b10 v
b11 B
b1 A
b0 S
b10 R
b1 d
b11 c
b10 u
b0 t
b11 %
b11 +
b11 4
b11 ;
b11 E
b11 L
b11 V
b11 ]
b11 g
b11 n
b11 *
#200000
b111 $
b111 3
b111 :
b111 D
b111 "
b111 1
b111 \
b111 f
b111 !
b111 0
b111 m
b111 w
b0 9
b0 @
b0 C
b0 [
b0 b
b0 e
b0 l
b0 s
b0 v
b0 u
b0 d
b0 c
b0 B
b0 A
b0 R
b0 )
b0 /
b0 8
b0 ?
b0 H
b0 O
b0 X
b0 _
b0 h
b0 o
b0 (
b0 .
b0 7
b0 >
b0 G
b0 N
b0 W
b0 ^
b0 k
b0 r
b0 '
b0 -
b0 6
b0 =
b0 F
b0 M
b0 Z
b0 a
b0 j
b0 q
b0 %
b0 +
b0 4
b0 ;
b0 E
b0 L
b0 V
b0 ]
b0 g
b0 n
b100 *
#250000
b101 *
#300000
b110 *
#350000
b111 *
#400000
b1000 *
#450000
b1001 *
#500000
b1010 *
